version: '3.5'

# Build the GitWrite with NERVE tool included in the same stack

# Todo: 
# * replace nginx with traefik (to handle routing & letsencrypt)
# * create docker hub account to automatically build images and watchtower to automatically deploy
# * create internal and external network; easier to understand naming of servers 

services:

  nerve:
    image: "cwrc/nerve:latest"
    environment:
      - LOG_LEVEL=VERBOSE # Log4J Logging level: WARN, VERBOSE
    restart: unless-stopped
    volumes:
      - ./container_volumes/nerve/:/usr/local/tomcat/logs
    networks:
      - gitwriter-internal 
    restart: unless-stopped

  validator:
    image: "cwrc/cwrc-validator:latest"
    volumes:
      - ./container_volumes/validator/:/usr/local/tomcat/logs
    networks:
      - gitwriter-internal 
    restart: unless-stopped

  gitwriter:
    image: "cwrc/cwrc-gitwriter:latest"
    networks:
      - gitwriter-internal 
    depends_on:
      - gitserver
      - nerve 
      - validator 
    restart: unless-stopped

  gitserver:
    image: "cwrc/cwrc-gitserver:latest"
    volumes:
      - ./container_volumes/cwrc-gitserver/config.js:/apps/CWRC-GitServer/config.js
    networks:
      - gitwriter-internal 
    restart: unless-stopped

  # ToDo: investigate replacement with Traefik
  # nginx:
  #  image: nginx
  #  links:
  #    - gitwriter:gitwriter
  #    - gitserver:gitserver
  #    - nerve:nerve
  #    - validator:validator
  #  ports:
  #    - 8200:80
  #  volumes:
  #    - ./container_volumes/nginx/nginx.conf:/etc/nginx/conf.d/cwrc.conf:ro
  #  restart: unless-stopped


  traefik:
    image: "traefik:v2.0"
    command:
      - "--configFile=/etc/traefik/traefik.yml"
    ports:
      - "80:80"
      - "443:443"
      # Web UI (enabled by --api.insecure=true)
      #- "8080:8080"
    networks:
      - external
      - gitwriter-internal 
    volumes:
      - "./container_volumes/traefik/conf/:/etc/traefik"
      - "./container_volumes/traefik/log/:/var/log/traefik"
      - "./container_volumes/letsencrypt:/var/letsencrypt/"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    depends_on:
      - gitwriter
    restart: unless-stopped


  # optional: poll DockerHub and update if image changes
  watchtower:
    image: "containrrr/watchtower"
    command:
      - "--cleanup"
      - "--interval=300"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    restart: unless-stopped

networks:
  external:
  gitwriter-internal:
